{"version":3,"sources":["../src/lib/dom.ts","../src/lib/template.ts","../src/lib/modify-template.ts","../src/lib/directive.ts","../src/lib/part.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/template-factory.ts","../src/lib/render.ts","../src/lib/default-template-processor.ts","src/lit-html.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","components/GameboyControlsCross.js","components/GameboyControlsButtons.js","components/GameboyControlsGame.js","../node_modules/howler/dist/howler.js","components/GameboyScreen.js","../src/directives/class-map.ts","components/GameboyConsole.js","../src/dat/index.js","../src/dat/color/toString.js","../src/dat/utils/common.js","../src/dat/color/interpret.js","../src/dat/color/math.js","../src/dat/color/Color.js","../src/dat/controllers/Controller.js","../src/dat/dom/dom.js","../src/dat/controllers/BooleanController.js","../src/dat/controllers/OptionController.js","../src/dat/controllers/StringController.js","../src/dat/controllers/NumberController.js","../src/dat/controllers/NumberControllerBox.js","../src/dat/controllers/NumberControllerSlider.js","../src/dat/controllers/FunctionController.js","../src/dat/controllers/ColorController.js","../src/dat/utils/css.js","../src/dat/gui/saveDialogue.html.js","../src/dat/controllers/ControllerFactory.js","../src/dat/utils/requestAnimationFrame.js","../src/dat/dom/CenteredDiv.js","../src/dat/gui/GUI.js","index.js"],"names":["GameboyControlsCross","LitElement","html","css","customElements","define","GameboyControlsButtons","GameboyControlsGame","dispatchEvent","CustomEvent","composed","bubbles","pressSelect","pressStart","sound","intro","Howl","src","mp3","volume","onend","level1","play","loop","level2","level3","hit","startup","SONGS","GameboyScreen","start","getAttribute","currentSong","timers","type","Boolean","Object","keys","forEach","key","stop","timer","clearTimeout","turnoffScenes","current","playing","pause","startIntro","off","scenes","scene","classList","remove","name","filter","element","contains","add","setTimeout","setScene","push","startGame","template","png","ljn","bits","Array","from","shadowRoot","querySelectorAll","t2","title","GameboyConsole","isOn","width","height","batteryLevel","addEventListener","nextSongTheme","col","style","setProperty","console","log","level","Math","min","querySelector","on","clickPower","color","forceCSSHex","colorFormat","__state","conversionName","toString","r","round","g","b","a","h","s","toFixed","v","str","hex","length","ARR_EACH","prototype","ARR_SLICE","slice","Common","target","each","call","arguments","obj","isObject","isUndefined","bind","toCall","args","i","apply","itr","scope","l","BREAK","fnc","func","threshold","callImmediately","timeout","callNow","delayed","toArray","undefined","isNaN","isArray","constructor","Function","INTERPRETATIONS","common","isString","original","test","match","parseInt","parseFloat","isNumber","result","toReturn","interpret","family","litmus","conversions","conversion","read","tmpComponent","ColorMath","hi","floor","f","p","q","t","c","max","delta","NaN","hex_with_component","componentIndex","value","Color","Error","colorToString","write","defineRGBComponent","component","componentHexIndex","defineProperty","space","recalculateRGB","defineHSVComponent","recalculateHSV","math","component_from_hex","extend","hsv_to_rgb","rgb_to_hsv","COMPONENTS","rgb_to_hex","Controller","object","property","initialValue","domElement","document","createElement","__onChange","__onFinishChange","newValue","updateDisplay","getValue","EVENT_MAP","EVENT_MAP_INV","k","e","CSS_VALUE_PIXELS","cssValueToPixels","val","isNull","dom","elem","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","hor","vert","vertical","horizontal","position","left","right","top","bottom","eventType","pars","aux","params","className","evt","createEvent","clientX","x","clientY","y","initMouseEvent","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","defaults","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","event","newBool","bool","attachEvent","removeEventListener","detachEvent","classes","split","indexOf","join","replace","removeAttribute","index","splice","RegExp","getComputedStyle","el","offset","offsetParent","offsetLeft","offsetTop","activeElement","href","BooleanController","_this","__prev","__checkbox","setAttribute","onChange","setValue","appendChild","checked","OptionController","opts","options","__select","map","opt","innerHTML","desiredValue","selectedIndex","isActive","StringController","__input","onBlur","blur","numDecimals","_x","NumberController","_params","__min","__max","__step","step","__impliedStep","pow","abs","LN10","__precision","_v","minValue","maxValue","stepValue","roundToDecimal","decimals","tenTo","NumberControllerBox","__truncationSuspended","prevY","onFinish","onMouseDrag","diff","onMouseUp","unbind","attempted","onMouseDown","i1","i2","o1","o2","NumberControllerSlider","preventDefault","bgRect","__background","getBoundingClientRect","onTouchMove","touches","onTouchEnd","__foreground","onTouchStart","addClass","pct","FunctionController","text","__button","fire","ColorController","__color","__temp","makeSelectable","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","removeClass","valueField","fieldDown","setSV","fieldUpSV","fieldDownH","setH","fieldUpH","toOriginal","fieldRect","mismatch","flip","_flip","toHexString","marginTop","vendors","linearGradient","background","vendor","cssText","hueGradient","url","indoc","doc","link","rel","getElementsByTagName","cssContent","injected","head","saveDialogContents","ControllerFactory","isFunction","isBoolean","requestAnimationFrame","callback","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","CenteredDiv","backgroundElement","makeFullscreen","body","hide","display","opacity","webkitTransform","layout","defer","innerWidth","getWidth","innerHeight","getHeight","inject","styleSheet","CSS_NAMESPACE","HIDE_KEY_CODE","CLOSE_BUTTON_HEIGHT","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceVirgin","autoPlaceContainer","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","DEFAULT_WIDTH","autoPlace","load","preset","parent","hideable","resizable","scrollable","useLocalStorage","root","getItem","getLocalStorageHash","saveToLocalStorage","titleRow","defineProperties","closeOnTop","getRoot","revert","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","stringify","getSaveObject","saveToLocalStorageIfPossible","gui","newDom","liBefore","li","removeListeners","markPresetModified","modified","__preset_select","augmentController","controller","__li","__gui","nextSibling","nextElementSibling","firstElementChild","listen","box","method","pc","pb","returned","oldName","wasListening","newController","compose","fakeEvent","stopPropagation","borderLeftColor","isModified","recallSavedValue","matchedIndex","controllerMap","remembered","presetMap","factoryArgs","concat","before","container","CLASS_CONTROLLER_ROW","location","addPresetOption","setSelected","showHideExplain","explain","addSaveMenu","div","__save_row","firstChild","gears","button","button2","button3","select","getElementById","localStorageCheckBox","newConstructorTextArea","which","show","focus","save","presetName","prompt","saveAs","addResizeHandle","pmouseX","drag","dragStop","CLASS_DRAG","dragStart","__resize_handle","setWidth","w","getCurrentPreset","useInitialValues","savedValues","setPresetSelectIndex","updateDisplays","controllerArray","toggleHide","CLASS_TOO_TALL","_keydownHandler","removeChild","subfolder","removeFolder","newGuiParams","folders","folder","parentElement","getOffset","node","offsetHeight","debounce","saveDialogueContents","controllers","domImport","GUIImport","gb","Options","bgColor","volumeLevel","dat","addColor","setBackgroundColor","setBatteryLevel","setVolumeLevel"],"mappings":"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","file":"src.ed35b2f0.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, _options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise =\n      new Promise((res) => this._enableUpdatingResolver = res);\n  private _enableUpdatingResolver: (() => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options = ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(\n    slotName: string = '', flatten: boolean = false) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n        const slot = this.renderRoot.querySelector(selector);\n        return slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Render method used to render the value to the element's DOM.\n   * @param result The value to render.\n   * @param container Node into which to render.\n   * @param options Element name.\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResult|CSSResultArray|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n    if (userStyles === undefined) {\n      this._styles = [];\n    } else if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles =\n          (styles: CSSResultArray, set: Set<CSSResult>): Set<CSSResult> =>\n              styles.reduceRight(\n                  (set: Set<CSSResult>, s) =>\n                      // Note: On IE set.add() does not return the set\n                  Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n                  set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResult>());\n      const styles: CSSResult[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = [userStyles];\n    }\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's NodePart - typically a TemplateResult.\n   * Setting properties inside this method will *not* trigger the element to\n   * update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","import { LitElement, html, css } from \"lit-element\";\r\n\r\nexport default class GameboyControlsCross extends LitElement {\r\n  static get styles() {\r\n    // prettier-ignore\r\n    return css`\r\n      :host {\r\n        background-color: var(--gameboy-bgcolor);\r\n        background-image:\r\n          linear-gradient(\r\n            to bottom,\r\n            rgba(0, 0, 0, 0.1) -10%,\r\n            rgba(0, 0, 0, 0.005) 130%\r\n          );\r\n        border-radius: 50%;\r\n        padding: 10px;\r\n        width: 100px;\r\n        height: 100px;\r\n        margin: 30px;\r\n        display: grid;\r\n        grid-template-areas:\r\n          \". up .\"\r\n          \"left center right\"\r\n          \". down .\";\r\n\r\n        & .cursor {\r\n          background: #040308;\r\n          border: 3px solid #040308;\r\n          box-shadow: 2px 4px 3px rgba(0, 0, 0, 0.6);\r\n          display: flex;\r\n        }\r\n\r\n        & .cursor.up,\r\n        & .cursor.left,\r\n        & .cursor.right {\r\n          border-top-color: #777;\r\n        }\r\n\r\n        & .cursor .circle {\r\n          border: 1px solid #111;\r\n          border-left: 0;\r\n          border-bottom: 0;\r\n          border-radius: 50%;\r\n          width: 100%;\r\n          height: 100%;\r\n          background:\r\n            conic-gradient(\r\n              rgba(255, 255, 255, 0.01) 0 30%,\r\n              rgba(255, 255, 255, 0.4) 40% 60%,\r\n              rgba(255, 255, 255, 0.02) 70%\r\n            );\r\n        }\r\n\r\n        & .cursor.up { grid-area: up; }\r\n        & .cursor.left { grid-area: left; }\r\n        & .cursor.center { grid-area: center; }\r\n        & .cursor.right { grid-area: right; }\r\n        & .cursor.down { grid-area: down; }\r\n\r\n        & .cursor:active {\r\n          box-shadow: none;\r\n          border-color: #111;\r\n        }\r\n\r\n        & .cursor.center:active {\r\n          border-color: #040308;\r\n        }\r\n      }\r\n`;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"cursor up\"></div>\r\n      <div class=\"cursor left\"></div>\r\n      <div class=\"cursor center\">\r\n        <div class=\"circle\"></div>\r\n      </div>\r\n      <div class=\"cursor right\"></div>\r\n      <div class=\"cursor down\"></div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"gameboy-controls-cross\", GameboyControlsCross);\r\n","import { LitElement, html, css } from \"lit-element\";\r\n\r\nexport default class GameboyControlsButtons extends LitElement {\r\n  static get styles() {\r\n    // prettier-ignore\r\n    return css`\r\n      :host {\r\n        background-color: var(--gameboy-bgcolor);\r\n        background-image:\r\n          linear-gradient(\r\n            rgba(0, 0, 0, 0.1) -10%,\r\n            rgba(0, 0, 0, 0.005) 130%\r\n          );\r\n        border-radius: 40px;\r\n        padding: 5px;\r\n        height: 60px;\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 50px 30px 0 0;\r\n        transform: rotate(-30deg);\r\n      }\r\n\r\n      .button {\r\n        width: 50px;\r\n        height: 50px;\r\n        box-shadow:\r\n          -2px 3px 5px rgba(0, 0, 0, 1),\r\n          -3px 4px 3px rgba(255, 255, 255, 0.25) inset;\r\n        margin: 0 6px;\r\n        border-radius: 50%;\r\n        background: #6f001a;\r\n\r\n        &:active {\r\n          box-shadow:\r\n            -3px 4px 3px rgba(0, 0, 0, 0.25) inset,\r\n            2px -2px 3px rgba(0, 0, 0, 0.25) inset;\r\n        }\r\n      }\r\n\r\n      .button::after {\r\n        font-family: Pretendo, sans-serif;\r\n        font-size: 16px;\r\n        color: #302058;\r\n        content: attr(data-button);\r\n        position: relative;\r\n        right: -15px;\r\n        bottom: -65px;\r\n      }\r\n`;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"button B\" data-button=\"B\"></div>\r\n      <div class=\"button A\" data-button=\"A\"></div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"gameboy-controls-buttons\", GameboyControlsButtons);\r\n","import { LitElement, html, css } from \"lit-element\";\r\n\r\nexport default class GameboyControlsGame extends LitElement {\r\n  pressSelect() {\r\n    this.dispatchEvent(new CustomEvent(\"GAMEBOY_SELECT_PRESSED\", { composed: true, bubbles: true }));\r\n  }\r\n\r\n  pressStart() {\r\n    this.dispatchEvent(new CustomEvent(\"GAMEBOY_START_PRESSED\", { composed: true, bubbles: true }));\r\n  }\r\n\r\n  static get styles() {\r\n    // prettier-ignore\r\n    return css`\r\n      .gamecontrols {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-bottom: 50px;\r\n\r\n        & .gap {\r\n          background-color: var(--gameboy-bgcolor);\r\n          background-image:\r\n            linear-gradient(\r\n              rgba(0, 0, 0, 0.1) -10%,\r\n              rgba(0, 0, 0, 0.005) 130%\r\n            );\r\n          transform: rotate(-28deg);\r\n          margin: 0 5px;\r\n          border-radius: 15px;\r\n        }\r\n\r\n        & .button {\r\n          background: #9e9baf;\r\n          border-radius: 10px;\r\n          box-shadow:\r\n            -2px -2px 5px rgba(0, 0, 0, 0.4) inset,\r\n            2px 2px 5px rgba(255, 255, 255, 0.7) inset,\r\n            2px 2px 6px rgba(0, 0, 0, 0.8);\r\n          width: 50px;\r\n          height: 12px;\r\n          margin: 6px 8px;\r\n\r\n          &:active {\r\n            box-shadow:\r\n              -2px -2px 5px rgba(0, 0, 0, 0.4) inset,\r\n              2px 2px 5px rgba(0, 0, 0, 0.7) inset;\r\n          }\r\n        }\r\n\r\n        & .button::after {\r\n          font-family: Pretendo, sans-serif;\r\n          font-size: 12px;\r\n          color: #302058;\r\n          content: attr(data-button);\r\n          position: relative;\r\n          right: 0;\r\n          bottom: -20px;\r\n        }\r\n      }\r\n`;\r\n  }\r\n\r\n  render() {\r\n    return html`<div class=\"gamecontrols\">\r\n      <div class=\"gap\"><div class=\"button select\" data-button=\"SELECT\" @click=${this.pressSelect}></div></div>\r\n      <div class=\"gap\"><div class=\"button start\" data-button=\"START\" @click=${this.pressStart}></div></div>\r\n    </div>`;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"gameboy-controls-game\", GameboyControlsGame);\r\n","/*!\n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import { LitElement, html, css, unsafeCSS } from \"lit-element\";\r\nimport { Howl } from \"howler\";\r\nimport mp3 from \"../assets/*.mp3\";\r\nimport png from \"../assets/*.png\";\r\n\r\nconst sound = {\r\n  intro: new Howl({ src: [mp3.intro], volume: 0.75, onend: () => sound.level1.play() }),\r\n  level1: new Howl({ src: [mp3.level1], volume: 0.75, loop: true }),\r\n  level2: new Howl({ src: [mp3.level2], volume: 0.75, loop: true }),\r\n  level3: new Howl({ src: [mp3.level3], volume: 0.75, loop: true }),\r\n  hit: new Howl({ src: [mp3.hit], volume: 1.5 }),\r\n  startup: new Howl({ src: [mp3.startup], volume: 1 }),\r\n};\r\n\r\nconst SONGS = [\"level1\", \"level2\", \"level3\"];\r\n\r\nexport default class GameboyScreen extends LitElement {\r\n  static get properties() {\r\n    return {\r\n      start: {\r\n        type: Boolean,\r\n      },\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.start = this.getAttribute(\"start\") || false;\r\n    this.currentSong = 0;\r\n    this.timers = [];\r\n  }\r\n\r\n  off() {\r\n    Object.keys(sound).forEach((key) => sound[key].stop());\r\n    this.timers.forEach((timer) => clearTimeout(timer));\r\n    this.turnoffScenes();\r\n  }\r\n\r\n  nextSongTheme() {\r\n    const current = SONGS[this.currentSong];\r\n    if (sound[current].playing()) {\r\n      sound[current].pause();\r\n      this.currentSong = (this.currentSong + 1) % 3;\r\n      sound[SONGS[this.currentSong]].play();\r\n    }\r\n  }\r\n\r\n  updated() {\r\n    if (this.start === true) this.startIntro();\r\n    else if (this.start === false) this.off();\r\n  }\r\n\r\n  turnoffScenes() {\r\n    this.scenes.forEach((scene) => scene.classList.remove(\"current\"));\r\n  }\r\n\r\n  setScene(name) {\r\n    this.turnoffScenes();\r\n    const [scene] = this.scenes.filter((element) => element.classList.contains(name));\r\n    scene.classList.add(\"current\");\r\n    if (name === \"t2\" || name == \"title\") setTimeout(() => sound.hit.play(), 1000);\r\n  }\r\n\r\n  startGame() {\r\n    this.setScene(\"ljn\");\r\n    this.timers.push(setTimeout(() => this.setScene(\"bits\"), 7000));\r\n    this.timers.push(setTimeout(() => this.setScene(\"t2\"), 14000));\r\n    this.timers.push(setTimeout(() => this.setScene(\"title\"), 17000));\r\n    this.timers.push(setTimeout(() => this.startGame(), 31000));\r\n  }\r\n\r\n  startIntro() {\r\n    this.setScene(\"intro\");\r\n    this.timers.push(\r\n      setTimeout(() => {\r\n        sound.startup.play();\r\n        this.timers.push(setTimeout(() => this.setScene(\"credits\"), 3400));\r\n        this.timers.push(\r\n          setTimeout(() => {\r\n            sound.intro.play();\r\n            this.startGame();\r\n          }, 8400)\r\n        );\r\n      }, 2100)\r\n    );\r\n  }\r\n\r\n  static get styles() {\r\n    // prettier-ignore\r\n    return css`\r\n      :host {\r\n        --scene-width: 230px;\r\n        --scene-height: 200px;\r\n\r\n        background: #9ca04c;\r\n        width: var(--scene-width);\r\n        height: var(--scene-height);\r\n        box-shadow:\r\n          5px 5px 10px rgba(0, 0, 0, 0.5) inset,\r\n          -2px -2px 10px rgba(0, 0, 0, 0.25) inset;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n        overflow: hidden;\r\n        position: relative;\r\n\r\n        & span {\r\n          font-family: \"Press Start 2P\", sans-serif;\r\n          font-weight: bold;\r\n          font-size: 18px;\r\n          letter-spacing: -1px;\r\n          color: #0f380f;\r\n\r\n          & sup {\r\n            font-weight: normal;\r\n            font-size: 12px;\r\n          }\r\n        }\r\n      }\r\n\r\n      .scene {\r\n        &.center {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n          height: 100%;\r\n        }\r\n\r\n        & img {\r\n          transform: scale(0.65);\r\n          image-rendering: pixelated;\r\n        }\r\n\r\n        &.credits {\r\n          font-family: \"Terminator 2\", monospace;\r\n          letter-spacing: -1px;\r\n          font-size: 8px;\r\n          text-align: center;\r\n        }\r\n      }\r\n\r\n      :host .scene {\r\n        opacity: 0;\r\n        width: 0;\r\n        height: 0;\r\n      }\r\n\r\n      .scene.current {\r\n        display: flex;\r\n        opacity: 1;\r\n        transition: opacity 1s;\r\n        width: var(--scene-width);\r\n        height: var(--scene-height);\r\n        mix-blend-mode: overlay;\r\n        filter: contrast(var(--gameboy-overlay-level));\r\n      }\r\n\r\n      .scene.intro.current span {\r\n        animation: startup 2s linear forwards;\r\n        transform: translate(0, -25px);\r\n      }\r\n\r\n      @keyframes startup {\r\n        0% {\r\n          transform: translate(0, -135px);\r\n        }\r\n\r\n        100% {\r\n          transform: translate(0, 0);\r\n        }\r\n      }\r\n\r\n      .t2 {\r\n        display: flex;\r\n        flex-direction: row !important;\r\n        overflow: hidden;\r\n\r\n        & .part1,\r\n        & .part2 {\r\n          width: 45%;\r\n          height: 100%;\r\n          background: url(${unsafeCSS(png.t2)});\r\n          background-size: 205px 120px;\r\n          background-repeat: no-repeat;\r\n          transition: transform 1s;\r\n        }\r\n\r\n        & .part1 {\r\n          transform: translateX(-180px);\r\n          background-position: left;\r\n        }\r\n\r\n        & .part2 {\r\n          transform: translateX(180px);\r\n          background-position: right;\r\n        }\r\n\r\n        &.current > div {\r\n          transform: translateX(0);\r\n        }\r\n      }\r\n\r\n      .title {\r\n        display: flex;\r\n        flex-direction: column !important;\r\n        overflow: hidden;\r\n\r\n        & .part1,\r\n        & .part2 {\r\n          width: 90%;\r\n          height: 50px;\r\n          background: url(${unsafeCSS(png.title)});\r\n          background-repeat: no-repeat;\r\n          background-size: 205px 100px;\r\n          transition: transform 1s;\r\n        }\r\n\r\n        & .part1 {\r\n          transform: translateY(-180px);\r\n          background-position: top;\r\n        }\r\n\r\n        & .part2 {\r\n          transform: translateY(180px);\r\n          background-position: bottom;\r\n        }\r\n\r\n        &.current > div {\r\n          transform: translateY(0);\r\n        }\r\n      }\r\n\r\n      .scene.title.current span {\r\n        font-family: \"Press Start 2P\", monospace;\r\n        font-size: 13px;\r\n        transform: translate(0, 80px);\r\n        animation:\r\n          moveText 2s linear 0.5s forwards,\r\n          blink 1s linear 3s infinite;\r\n      }\r\n\r\n      @keyframes moveText {\r\n        0% { transform: translate(0, 80px); }\r\n        100% { transform: translate(0, 20px); }\r\n      }\r\n\r\n      @keyframes blink {\r\n        0%,\r\n        50% { opacity: 1; }\r\n\r\n        51%,\r\n        100% { opacity: 0; }\r\n      }\r\n`;\r\n  }\r\n\r\n  render() {\r\n    const template = html`\r\n      <div class=\"scene intro center\">\r\n        <span>Nintendo<sup>®</sup></span>\r\n      </div>\r\n      <div class=\"scene credits center\">\r\n        <p>Terminator 2<br />Judgment Day</p>\r\n        <p>© 1991 CAROLCO<br />© 1991 LJN LTD.</p>\r\n        <p>Programming<br />Copyright B.I.T.S.</p>\r\n        <p>LICENSED BY NINTENDO</p>\r\n      </div>\r\n      <div class=\"scene ljn center\">\r\n        <img src=\"${png.ljn}\" alt=\"LJN\" />\r\n      </div>\r\n      <div class=\"scene bits center\">\r\n        <img src=\"${png.bits}\" alt=\"LJN\" />\r\n      </div>\r\n      <div class=\"scene t2 center himpact\">\r\n        <div class=\"part1\"></div>\r\n        <div class=\"part2\"></div>\r\n      </div>\r\n      <div class=\"scene title center vimpact\">\r\n        <div class=\"part1\"></div>\r\n        <div class=\"part2\"></div>\r\n        <span>PUSH START</span>\r\n      </div>\r\n    `;\r\n    this.scenes = Array.from(this.shadowRoot.querySelectorAll(\".scene\"));\r\n    return template;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"gameboy-screen\", GameboyScreen);\r\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n  element: Element;\n  classes: Set<string> = new Set();\n  changed = false;\n\n  constructor(element: Element) {\n    this.element = element;\n    const classList = (element.getAttribute('class') || '').split(/\\s+/);\n    for (const cls of classList) {\n      this.classes.add(cls);\n    }\n  }\n  add(cls: string) {\n    this.classes.add(cls);\n    this.changed = true;\n  }\n\n  remove(cls: string) {\n    this.classes.delete(cls);\n    this.changed = true;\n  }\n\n  commit() {\n    if (this.changed) {\n      let classString = '';\n      this.classes.forEach((cls) => classString += cls + ' ');\n      this.element.setAttribute('class', classString);\n    }\n  }\n}\n\nexport interface ClassInfo {\n  readonly [name: string]: string|boolean|number;\n}\n\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap<Part, Set<string>>();\n\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo: ClassInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'class' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `classMap` directive must be used in the `class` attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {element} = committer;\n\n  let previousClasses = previousClassesCache.get(part);\n  if (previousClasses === undefined) {\n    // Write static classes once\n    // Use setAttribute() because className isn't a string on SVG elements\n    element.setAttribute('class', committer.strings.join(' '));\n    previousClassesCache.set(part, previousClasses = new Set());\n  }\n\n  const classList =\n      (element.classList || new ClassList(element)) as DOMTokenList | ClassList;\n\n  // Remove old classes that no longer apply\n  // We use forEach() instead of for-of so that re don't require down-level\n  // iteration.\n  previousClasses.forEach((name) => {\n    if (!(name in classInfo)) {\n      classList.remove(name);\n      previousClasses!.delete(name);\n    }\n  });\n\n  // Add or remove classes based on their classMap value\n  for (const name in classInfo) {\n    const value = classInfo[name];\n    if (value != previousClasses.has(name)) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      if (value) {\n        classList.add(name);\n        previousClasses.add(name);\n      } else {\n        classList.remove(name);\n        previousClasses.delete(name);\n      }\n    }\n  }\n  if (typeof (classList as ClassList).commit === 'function') {\n    (classList as ClassList).commit();\n  }\n});\n","import \"./GameboyControlsCross.js\";\r\nimport \"./GameboyControlsButtons.js\";\r\nimport \"./GameboyControlsGame.js\";\r\nimport \"./GameboyScreen.js\";\r\n\r\nimport { LitElement, html, css } from \"lit-element\";\r\nimport { classMap } from \"lit-html/directives/class-map\";\r\nimport { Howler } from \"howler\";\r\n\r\nexport default class GameboyConsole extends LitElement {\r\n  static get properties() {\r\n    return {\r\n      isOn: { type: Boolean },\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.isOn = false;\r\n    this.width = 380;\r\n    this.height = 625;\r\n    this.batteryLevel = 1;\r\n\r\n    this.addEventListener(\"GAMEBOY_SELECT_PRESSED\", () => this.nextSongTheme());\r\n  }\r\n\r\n  setBackgroundColor(col) {\r\n    this.style.setProperty(\"--gameboy-bgcolor\", col);\r\n    console.log(col);\r\n  }\r\n\r\n  setBatteryLevel(level) {\r\n    this.batteryLevel = level;\r\n    this.style.setProperty(\"--gameboy-battery-level\", Math.min(1, level * 1.5));\r\n    this.style.setProperty(\"--gameboy-overlay-level\", level * 1.5);\r\n  }\r\n\r\n  setVolumeLevel(level) {\r\n    Howler.volume(level);\r\n  }\r\n\r\n  nextSongTheme() {\r\n    this.shadowRoot.querySelector(\"gameboy-screen\").nextSongTheme();\r\n  }\r\n\r\n  static get styles() {\r\n    // prettier-ignore\r\n    return css`\r\n      :host {\r\n        --gameboy-bgcolor: #d3ccd3;\r\n        --gameboy-battery-level: 1;\r\n        --gameboy-overlay-level: 1.5;\r\n\r\n        width: var(--gameboy-width);\r\n        height: var(--gameboy-height);\r\n        position: relative;\r\n      }\r\n\r\n      /* GameBoy console body */\r\n      .gameboy {\r\n        background-color: var(--gameboy-bgcolor);\r\n        background-image: linear-gradient(transparent 95%, rgba(0, 0, 0, 0.5) 98%, rgba(0, 0, 0, 0.4) 99%);\r\n        overflow: hidden;\r\n        border-radius: 12px 12px 75px 12px;\r\n        box-shadow:\r\n          0 0 10px rgba(0, 0, 0, 0.5),\r\n          0 0 25px rgba(0, 0, 0, 0.25) inset,\r\n          -2px -2px 10px rgba(0, 0, 0, 0.8) inset,\r\n          0 0 15px rgba(0, 0, 0, 0.75) inset;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        position: relative;\r\n      }\r\n\r\n      .power {\r\n        width: 30px;\r\n        height: 15px;\r\n        border-radius: 50%;\r\n        background-color: var(--gameboy-bgcolor);\r\n        background-image: linear-gradient(to right, rgba(0, 0, 0, 0.05) 10%, rgba(0, 0, 0, 0.1) 30% 70%, rgba(0, 0, 0, 0.05) 90%);\r\n        box-shadow: 0 0 4px rgba(0, 0, 0, 0.5) inset;\r\n        position: absolute;\r\n        top: -7px;\r\n        left: 50px;\r\n        cursor: pointer;\r\n\r\n        &.on {\r\n          left: 75px;\r\n        }\r\n      }\r\n\r\n      .gbtop {\r\n        display: flex;\r\n        padding-bottom: 5px;\r\n        margin-bottom: 5px;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n\r\n        & .corner {\r\n          width: 25px;\r\n          height: 20px;\r\n        }\r\n\r\n        & .corner.left {\r\n          margin-right: 5px;\r\n        }\r\n\r\n        & .corner.right {\r\n          margin-left: 5px;\r\n        }\r\n\r\n        & .top {\r\n          width: 100%;\r\n\r\n          & span {\r\n            font-family: Arial, sans-serif;\r\n            font-size: 12px;\r\n            box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5) inset;\r\n            text-shadow: 2px 1px 2px rgba(0, 0, 0, 1);\r\n            color: #eee;\r\n            border-radius: 15px;\r\n            margin: 0 6px;\r\n            padding: 2px 5px;\r\n            opacity: 0.25;\r\n          }\r\n        }\r\n\r\n        & .left,\r\n        & .top,\r\n        & .right {\r\n          border-radius: 0 0 2px 2px;\r\n          border: 1px solid rgba(0, 0, 0, 0.1);\r\n          box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.25);\r\n        }\r\n      }\r\n\r\n      /* GameBoy complete screen (gray + green) */\r\n      .screen {\r\n        background: #767189;\r\n        width: calc(var(--gameboy-height) / 1.9);\r\n        box-shadow: 0 0 2px #514c65;\r\n        border-radius: 10px 10px 35px 10px;\r\n        border: 1px solid #666;\r\n        border-width: 0 1px 0 1px;\r\n        height: 250px;\r\n        margin: 0.1em auto;\r\n\r\n        & .minitext {\r\n          font-family: Arial, sans-serif;\r\n          font-size: 10px;\r\n          color: #fff;\r\n        }\r\n\r\n        & .top {\r\n          margin: 0 15px;\r\n          height: 30px;\r\n          background:\r\n            linear-gradient(\r\n              transparent 10px,\r\n              #7d1a4a 10px 12px,\r\n              transparent 12px 16px,\r\n              #35224e 16px 18px,\r\n              transparent 18px\r\n            );\r\n          position: relative;\r\n\r\n          & span {\r\n            padding: 0 8px;\r\n            background: #767189;\r\n            position: absolute;\r\n            right: 30px;\r\n            top: 8px;\r\n          }\r\n        }\r\n\r\n        & .bottom {\r\n          display: flex;\r\n\r\n          & .led {\r\n            width: 10px;\r\n            height: 10px;\r\n            background: #4a4748;\r\n            border-radius: 50%;\r\n            margin: 6px;\r\n\r\n            &.on {\r\n              background: rgba(216, 30, 7, var(--gameboy-battery-level));\r\n              box-shadow: 0 0 5px #d81e07;\r\n            }\r\n          }\r\n\r\n          & .battery {\r\n            padding: 0 10px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: flex-start;\r\n\r\n            & .minitext {\r\n              font-size: 9px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      /* Brand Nintendo GameBoy text */\r\n      .brand {\r\n        margin: 5px 30px;\r\n\r\n        & .company,\r\n        & .type {\r\n          font-family: Pretendo, sans-serif;\r\n          font-size: 15px;\r\n          color: #302058;\r\n        }\r\n\r\n        & .type {\r\n          font-family: Lato, sans-serif;\r\n          font-weight: bold;\r\n          font-style: italic;\r\n          font-size: 22px;\r\n        }\r\n      }\r\n\r\n      /* Main controls: Cross and A/B buttons */\r\n      .controls {\r\n        display: flex;\r\n        justify-content: space-between;\r\n      }\r\n\r\n      /* Gameboy bottom body part */\r\n      .gameboy > .bottom {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        position: relative;\r\n        left: -20px;\r\n      }\r\n\r\n      .speaker {\r\n        display: flex;\r\n        width: 120px;\r\n        justify-content: space-around;\r\n        position: absolute;\r\n        right: 10px;\r\n        bottom: 35px;\r\n        transform: rotate(-30deg);\r\n\r\n        &::after {\r\n          content: \"\";\r\n          width: 200px;\r\n          height: 60px;\r\n          position: absolute;\r\n          background: rgba(0, 0, 0, 0.1);\r\n          top: 50px;\r\n        }\r\n\r\n        & .band {\r\n          width: 8px;\r\n          height: 60px;\r\n          border-radius: 8px;\r\n          box-shadow: 3px 6px 1px rgba(0, 0, 0, 0.6) inset;\r\n          background: rgba(0, 0, 0, 0.35);\r\n        }\r\n      }\r\n\r\n      .gbbottom {\r\n        transform: translateX(6px);\r\n      }\r\n\r\n      .phones {\r\n        font-family: Arial, sans-serif;\r\n        font-size: 10px;\r\n        opacity: 0.5;\r\n        text-align: center;\r\n        border: 1px solid #aaa;\r\n        border-radius: 40px;\r\n        padding: 2px 6px;\r\n        box-shadow: 0 0 5px rgba(0, 0, 0, 0.5) inset;\r\n      }\r\n\r\n      .slot {\r\n        margin: auto;\r\n      }\r\n\r\n      .slot,\r\n      .slot::before,\r\n      .slot::after {\r\n        width: 5px;\r\n        height: 10px;\r\n        background-color: var(--gameboy-bgcolor);\r\n        background-image:\r\n          linear-gradient(\r\n            to left,\r\n            rgba(0, 0, 0, 0.65) 1px,\r\n            rgba(0, 0, 0, 0.6) 2px,\r\n            rgba(0, 0, 0, 0.65) 4px\r\n          );\r\n      }\r\n\r\n      .slot::before,\r\n      .slot::after {\r\n        content: \"\";\r\n        display: block;\r\n        width: 5px;\r\n        height: 10px;\r\n        position: absolute;\r\n      }\r\n\r\n      .slot::before {\r\n        transform: translateX(-8px);\r\n      }\r\n\r\n      .slot::after {\r\n        transform: translateX(8px);\r\n      }\r\n`;\r\n  }\r\n\r\n  clickPower() {\r\n    this.isOn = !this.isOn;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          --gameboy-width: ${this.width}px;\r\n          --gameboy-height: ${this.height}px;\r\n        }\r\n      </style>\r\n      <div class=\"power ${classMap({ on: this.isOn })}\" @click=\"${this.clickPower}\"></div>\r\n      <div class=\"gameboy\">\r\n        <div class=\"gbtop\">\r\n          <div class=\"corner left\"></div>\r\n          <div class=\"top\">\r\n            <span>◁ OFF·ON ▷</span>\r\n          </div>\r\n          <div class=\"corner right\"></div>\r\n        </div>\r\n        <div class=\"screen\">\r\n          <div class=\"top\">\r\n            <span class=\"minitext\">DOT MATRIX WITH STEREO SOUND</span>\r\n          </div>\r\n          <div class=\"bottom\">\r\n            <div class=\"battery\">\r\n              <div class=\"led ${classMap({ on: this.isOn })}\"></div>\r\n              <span class=\"minitext\">BATTERY</span>\r\n            </div>\r\n            <gameboy-screen .start=${this.isOn}></gameboy-screen>\r\n          </div>\r\n        </div>\r\n        <div class=\"brand\">\r\n          <span class=\"company\">Nintendo</span>\r\n          <span class=\"type\">GAME BOY</span>\r\n          <sub>™</sub>\r\n        </div>\r\n\r\n        <div class=\"controls\">\r\n          <gameboy-controls-cross></gameboy-controls-cross>\r\n          <gameboy-controls-buttons></gameboy-controls-buttons>\r\n        </div>\r\n\r\n        <div class=\"speaker\">\r\n          <div class=\"band\"></div>\r\n          <div class=\"band\"></div>\r\n          <div class=\"band\"></div>\r\n          <div class=\"band\"></div>\r\n          <div class=\"band\"></div>\r\n          <div class=\"band\"></div>\r\n        </div>\r\n\r\n        <div class=\"bottom\">\r\n          <gameboy-controls-game></gameboy-controls-game>\r\n          <div class=\"gbbottom\">\r\n            <div class=\"phones\">🎧PHONES</div>\r\n            <div class=\"slot\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"gameboy-console\", GameboyConsole);\r\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    }\n  );\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {Boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n        {\n          const clientX = params.x || params.clientX || 0;\n          const clientY = params.y || params.clientY || 0;\n          evt.initMouseEvent(eventType, params.bubbles || false,\n            params.cancelable || true, window, params.clickCount || 1,\n            0, // screen X\n            0, // screen Y\n            clientX, // client X\n            clientY, // client Y\n            false, false, false, false, 0, null);\n          break;\n        }\n      case 'KeyboardEvents':\n        {\n          const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n          common.defaults(params, {\n            cancelable: true,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            keyCode: undefined,\n            charCode: undefined\n          });\n          init(eventType, params.bubbles || false,\n            params.cancelable, window,\n            params.ctrlKey, params.altKey,\n            params.shiftKey, params.metaKey,\n            params.keyCode, params.charCode);\n          break;\n        }\n      default:\n        {\n          evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n          break;\n        }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n//      width: '120px',\n      textAlign: 'center',\n//      padding: '4px',\n//      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n","const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n                        arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n                        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n//    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n//    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n//    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          });\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n","import \"./components/GameboyConsole.js\";\r\nimport dat from \"dat.gui\";\r\n\r\nconst gb = document.querySelector(\"gameboy-console\");\r\n\r\nclass Options {\r\n  constructor() {\r\n    this.bgColor = \"#d3ccd3\";\r\n    this.batteryLevel = 1;\r\n    this.volumeLevel = 1;\r\n  }\r\n}\r\n\r\nconst gui = new dat.GUI();\r\nconst options = new Options();\r\n\r\ngui.addColor(options, \"bgColor\").onChange((v) => gb.setBackgroundColor(v));\r\ngui.add(options, \"batteryLevel\", 0.25, 1, 0.25).onChange((v) => gb.setBatteryLevel(v));\r\ngui.add(options, \"volumeLevel\", 0, 1, 0.1).onChange((v) => gb.setVolumeLevel(v));\r\n"]}